{"version":3,"sources":["configs/secrets.js","configs/url.js","parts/pageNav.js","parts/pageContent.js","parts/pageFooter.js","App.js","serviceWorker.js","index.js"],"names":["console","error","url","users","checkInviteCode","login","logout","updateUserInfo","saasApiGetTickets","saasApiGetKnowledges","PageNav","props","state","registModalVisible","userinfoModalVisible","loginModalVisible","newUserForm","inviteCode","React","createRef","company","title","name","phone","email","passwd","agree","loginForm","userInfoForm","fetch","method","body","JSON","stringify","headers","then","res","json","result","status","alert","message","window","location","reload","this","setState","current","value","user","checked","length","code","log","Container","Row","Col","xs","sm","style","textAlign","margin","src","alt","className","flex","Button","variant","size","onClick","handleLoadUserinfo","Modal","show","onHide","Header","closeButton","Title","Body","Tabs","defaultActiveKey","Tab","eventKey","Form","Group","as","Label","column","controlId","Control","required","ref","onChange","handleCheckInviteCode","placeholder","disabled","type","span","offset","Check","label","href","open","handleCreateUser","handleUpdateUserInfo","handleLogout","handleLogin","Component","PageContent","ticketModalVisible","knowledgeModalVisible","tickets","currentTicketContent","knowledges","currentKnowledge","contents","knowledge_questions","ticket","replies","infoList","id","subject","Date","created_at","toLocaleString","updated_at","map","c","index","key","content","Table","striped","bordered","hover","marginTop","reply","reply_content_type","reply_user","reply_updated_at","dangerouslySetInnerHTML","__html","reply_content","knowledge","Jumbotron","channel","lg","webim_sign","handleShowTicket","toLocaleDateString","colSpan","ListGroup","width","Item","action","handleShowKnowledge","Footer","PageFooter","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1d856091.chunk.js","sourcesContent":["export const BACKEND_SERVER = ''\n\nif (!BACKEND_SERVER) {\n  console.error('No Phytium New Fundation BACKEND_SERVER uri. Set REACT_APP_BACKEND_SERVER environment variable.')\n}\n","import { BACKEND_SERVER } from './secrets'\n\nconst host = BACKEND_SERVER;\n\nconst url = {\n  users: `${host}/users/`,\n  checkInviteCode: `${host}/inviteCode/check/`,\n  login: `${host}/login/`,\n  logout: `${host}/logout/`,\n  updateUserInfo: `${host}/updateUserInfo/`,\n\n  saasApiGetTickets: `${host}/saasApi/getTickets/`,\n  saasApiGetKnowledges: `${host}/saasApi/getKnowledges/`\n}\n\nexport default url\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Modal from 'react-bootstrap/Modal'\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\nimport Form from 'react-bootstrap/Form'\n\nimport url from '../configs/url'\n\nclass PageNav extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      registModalVisible: false,\n      userinfoModalVisible: false,\n      loginModalVisible: false\n    }\n\n    this.newUserForm = {\n      inviteCode: React.createRef(),\n      company: React.createRef(),\n      title: React.createRef(),\n      name: React.createRef(),\n      phone: React.createRef(),\n      email: React.createRef(),\n      passwd: React.createRef(),\n      agree: React.createRef()\n    }\n    this.loginForm = {\n      phone: React.createRef(),\n      passwd: React.createRef()\n    }\n    this.userInfoForm = {\n      company: React.createRef(),\n      title: React.createRef(),\n      name: React.createRef(),\n      phone: React.createRef(),\n      email: React.createRef(),\n      passwd: React.createRef()\n    }\n  }\n\n  handleLogout () {\n    fetch(url.logout, {\n      method: 'POST',\n      body: JSON.stringify({}),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n      .then((res) => {\n        return res.json()\n      })\n      .then((result) => {\n        if (result.status) {\n          alert(result.message)\n        } else {\n          window.location.reload(false)\n        }\n      })\n  }\n\n  handleLoadUserinfo () {\n    this.setState({\n      userinfoModalVisible: true\n    }, () => {\n      this.userInfoForm.company.current.value = window.user.company\n      this.userInfoForm.name.current.value = window.user.name\n      this.userInfoForm.phone.current.value = window.user.phone\n      this.userInfoForm.email.current.value = window.user.email\n      this.userInfoForm.title.current.value = window.user.title\n    })\n  }\n\n  handleCreateUser () {\n    if (!this.newUserForm.agree.current.checked) {\n      alert('您需要同意飞腾新基建服务保证联盟章程才能注册本平台.')\n      return\n    }\n    if (!this.newUserForm.title.current.value) {\n      alert('请输入职位')\n      return\n    }\n    if (!this.newUserForm.name.current.value) {\n      alert('请输入姓名')\n      return\n    }\n    if (!this.newUserForm.phone.current.value || this.newUserForm.phone.current.value.length !== 11) {\n      alert('请正确输入11位手机号')\n      return\n    }\n    if (!this.newUserForm.email.current.value) {\n      alert('请输入邮箱')\n      return\n    }\n    if (!this.newUserForm.passwd.current.value) {\n      alert('请输入服务密码')\n      return\n    }\n    fetch(url.users, {\n      method: 'POST',\n      body: JSON.stringify({\n        inviteCode: this.newUserForm.inviteCode.current.value,\n        name: this.newUserForm.name.current.value,\n        phone: this.newUserForm.phone.current.value,\n        email: this.newUserForm.email.current.value,\n        passwd: this.newUserForm.passwd.current.value,\n        company: this.newUserForm.company.current.value,\n        title: this.newUserForm.title.current.value\n      }),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n      .then((res) => {\n        return res.json() // 请求成功，获请求元数据\n      })\n      .then((result) => {\n        if (result.status === 0) {\n          alert(result.message)\n          window.location.reload(false)\n        } else {\n          if (result.message) {\n            alert(result.message)\n          } else {\n            alert('发生了未知的服务器错误, 请联系400客服.')\n          }\n        }\n      })\n  }\n\n  handleCheckInviteCode () {\n    if (this.newUserForm.inviteCode.current.value.length !== 8) {\n      this.newUserForm.company.current.value = '请正确输入8位邀请码'\n    } else {\n      fetch(url.checkInviteCode, {\n        method: 'POST',\n        body: JSON.stringify({\n          code: this.newUserForm.inviteCode.current.value\n        }),\n        headers: {\n          'content-type': 'application/json'\n        }\n      })\n        .then((res) => {\n          return res.json()\n        })\n        .then((result) => {\n          if (result.status) {\n            alert(result.message)\n          } else {\n            this.newUserForm.company.current.value = result.message\n          }\n        })\n    }\n  }\n\n  handleLogin () {\n    if (!this.loginForm.phone.current.value || this.loginForm.phone.current.value.length !== 11) {\n      alert('请正确输入13位手机号')\n      return\n    }\n    if (!this.loginForm.passwd.current.value) {\n      alert('请输入服务密码')\n      return\n    }\n    fetch(url.login, {\n      method: 'POST',\n      body: JSON.stringify({\n        phone: this.loginForm.phone.current.value,\n        passwd: this.loginForm.passwd.current.value\n      }),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n      .then((res) => {\n        return res.json()\n      })\n      .then((result) => {\n        console.log(result)\n        if (result.status) {\n          alert(result.message)\n        } else {\n          window.location.reload(false)\n        }\n      })\n  }\n\n  handleUpdateUserInfo () {\n    fetch(url.updateUserInfo, {\n      method: 'POST',\n      body: JSON.stringify({\n        title: this.userInfoForm.title.current.value,\n        name: this.userInfoForm.name.current.value,\n        email: this.userInfoForm.email.current.value,\n        phone: this.userInfoForm.phone.current.value,\n        passwd: this.userInfoForm.passwd.current.value\n      }),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n      .then((res) => {\n        return res.json()\n      })\n      .then((result) => {\n        if (result.status) {\n          alert(result.message)\n        } else {\n          window.location.reload(false)\n        }\n      })\n  }\n\n  render () {\n    return (\n      <Container>\n        <Row>\n          <Col xs={12} sm={6} style={{ textAlign: 'right', margin: '2em' }}>\n            <Row> <img src=\"/static/img/logo2.png\" alt=\"logo\"/> <span className='header-title'>飞腾新基建服务保障平台</span> </Row>\n          </Col>\n          <Col xs={12} sm={6} style={{ textAlign: 'right', flex: 1, margin: '2em' }}>\n            {\n              window.user\n                ? <><Button variant=\"secondary\" size='sm' onClick={() => this.handleLoadUserinfo()}>用户信息</Button></>\n                : <>\n                  <Button variant=\"secondary\" size='sm' onClick={() => this.setState({ loginModalVisible: true })}>登录</Button>\n                  <Button variant=\"secondary\" size='sm' onClick={() => this.setState({ registModalVisible: true })}>注册</Button>\n                </>\n            }\n          </Col>\n        </Row>\n\n        <Modal show={this.state.registModalVisible} onHide={() => this.setState({ registModalVisible: false })}>\n          <Modal.Header closeButton>\n            <Modal.Title>欢迎注册飞腾新基建服务保证平台</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tabs defaultActiveKey=\"invite\">\n              <Tab eventKey=\"invite\" title=\"邀请注册\">\n                <br/>\n                <Form>\n                  <Form.Group as={Row}>\n                    <Form.Label column sm={3} controlId=\"inviteCode\" style={{ textAlign: 'right' }}>\n                      邀请码\n                    </Form.Label>\n                    <Col sm={9}>\n                      <Form.Control required ref={this.newUserForm.inviteCode}\n                        onChange={() => this.handleCheckInviteCode()} placeholder=\"如果没有申请码请使用自行申请\"/>\n                    </Col>\n                  </Form.Group>\n                  <Form.Group as={Row} controlId=\"company\">\n                    <Form.Label column sm={3} style={{ textAlign: 'right' }}>\n                      公司\n                    </Form.Label>\n                    <Col sm={9}>\n                      <Form.Control disabled required ref={this.newUserForm.company} placeholder=\"填写邀请码后自动识别\"/>\n                    </Col>\n                  </Form.Group>\n                  <Form.Group as={Row} controlId=\"title\">\n                    <Form.Label column sm={3} style={{ textAlign: 'right' }}>\n                      职位\n                    </Form.Label>\n                    <Col sm={9}>\n                      <Form.Control required ref={this.newUserForm.title} placeholder=\"\"/>\n                    </Col>\n                  </Form.Group>\n                  <Form.Group as={Row} controlId=\"realname\">\n                    <Form.Label column sm={3} style={{ textAlign: 'right' }}>\n                      姓名\n                    </Form.Label>\n                    <Col sm={9}>\n                      <Form.Control required ref={this.newUserForm.name} placeholder=\"\"/>\n                    </Col>\n                  </Form.Group>\n                  <Form.Group as={Row} controlId=\"phone\">\n                    <Form.Label column sm={3} style={{ textAlign: 'right' }}>\n                      手机号\n                    </Form.Label>\n                    <Col sm={9}>\n                      <Form.Control required ref={this.newUserForm.phone} placeholder=\"\"/>\n                    </Col>\n                  </Form.Group>\n                  <Form.Group as={Row} controlId=\"email\">\n                    <Form.Label column sm={3} style={{ textAlign: 'right' }}>\n                      邮箱\n                    </Form.Label>\n                    <Col sm={9}>\n                      <Form.Control ref={this.newUserForm.email} placeholder=\"\"/>\n                    </Col>\n                  </Form.Group>\n                  <Form.Group as={Row} controlId=\"passwd\">\n                    <Form.Label column sm={3} style={{ textAlign: 'right' }}>\n                      服务密码\n                    </Form.Label>\n                    <Col sm={9}>\n                      <Form.Control required ref={this.newUserForm.passwd} type=\"password\" placeholder=\"\"/>\n                    </Col>\n                  </Form.Group>\n                  <Form.Group as={Row} controlId=\"formHorizontalCheck\">\n                    <Col sm={{ span: 2, offset: 3 }}>\n                      <Form.Check ref={this.newUserForm.agree} label='同意'/>\n                    </Col>\n                    <Col>\n                      <a href=\"#\" onClick={() => window.open('/static/飞腾新基建服务保障联盟章程.pdf', '_blank')}>飞腾新基建服务保证联盟章程</a>\n                    </Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Col sm={{ span: 4, offset: 3 }}>\n                      <Button variant=\"primary\" onClick={() => this.handleCreateUser()}>注册</Button>\n                    </Col>\n                  </Form.Group>\n                </Form>\n              </Tab>\n              <Tab eventKey=\"diy\" title=\"自行申请\">\n                <p>请按照如下步骤申请加入联盟:</p>\n                <p>1. 下载 <a href=\"#\" onClick={() => window.open('/static/飞腾新基建服务保障联盟申请表.docx', '_blank')}>飞腾新基建服务保障联盟申请表</a>并填写、打印、盖章、扫描</p>\n                <p>2. 下载 <a href=\"#\" onClick={() => window.open('/static/飞腾新基建服务保障联盟账号信息表.xlsx', '_blank')}>飞腾新基建服务保障联盟账号信息表</a>并填写</p>\n                <p>3. 请将上述第1项扫描件和第2项电子档发邮件到<a href=\"mailto:pnic@phytium.com.cn\">pnic@phytium.com.cn</a></p>\n              </Tab>\n            </Tabs>\n          </Modal.Body>\n        </Modal>\n\n        <Modal show={this.state.userinfoModalVisible} onHide={() => this.setState({ userinfoModalVisible: false })}>\n          <Modal.Header closeButton>\n            <Modal.Title>修改用户信息</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <br/>\n            <Form>\n              <Form.Group as={Row} controlId=\"company\">\n                <Form.Label column sm={3} style={{ textAlign: 'right' }}>\n                  公司\n                </Form.Label>\n                <Col sm={9}>\n                  <Form.Control disabled required ref={this.userInfoForm.company}/>\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} controlId=\"company\">\n                <Form.Label column sm={3} style={{ textAlign: 'right' }}>\n                  职务\n                </Form.Label>\n                <Col sm={9}>\n                  <Form.Control required ref={this.userInfoForm.title}/>\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} controlId=\"realname\">\n                <Form.Label column sm={3} style={{ textAlign: 'right' }}>\n                  姓名\n                </Form.Label>\n                <Col sm={9}>\n                  <Form.Control required ref={this.userInfoForm.name}/>\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} controlId=\"phone\">\n                <Form.Label column sm={3} style={{ textAlign: 'right' }}>\n                  手机号\n                </Form.Label>\n                <Col sm={9}>\n                  <Form.Control required ref={this.userInfoForm.phone}/>\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} controlId=\"email\">\n                <Form.Label column sm={3} style={{ textAlign: 'right' }}>\n                  邮箱\n                </Form.Label>\n                <Col sm={9}>\n                  <Form.Control required ref={this.userInfoForm.email}/>\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} controlId=\"passwd\">\n                <Form.Label column sm={3} style={{ textAlign: 'right' }}>\n                  服务密码\n                </Form.Label>\n                <Col sm={9}>\n                  <Form.Control required ref={this.userInfoForm.passwd} type=\"password\" placeholder=\"请输入新密码\"/>\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row}>\n                <Col sm={{ span: 9, offset: 3 }}>\n                  <Button variant=\"primary\" onClick={() => this.handleUpdateUserInfo()}>更新用户信息</Button> {' '}\n                  <Button variant=\"danger\" onClick={(() => this.handleLogout())}>退出登录</Button>\n                </Col>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n        </Modal>\n\n        <Modal show={this.state.loginModalVisible} onHide={() => this.setState({ loginModalVisible: false })}>\n          <Modal.Header closeButton>\n            <Modal.Title>登录</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <br/>\n            <Form>\n              <Form.Group as={Row} controlId=\"phone\">\n                <Form.Label column sm={3} style={{ textAlign: 'right' }}>\n                  手机号\n                </Form.Label>\n                <Col sm={8}>\n                  <Form.Control required ref={this.loginForm.phone} placeholder=\"11位手机号\"/>\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} controlId=\"passwd\">\n                <Form.Label column sm={3} style={{ textAlign: 'right' }}>\n                  服务密码\n                </Form.Label>\n                <Col sm={8}>\n                  <Form.Control required ref={this.loginForm.passwd} type=\"password\" placeholder=\"请输入密码\"/>\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row}>\n                <Col sm={{ span: 9, offset: 3 }}>\n                  <Button variant=\"primary\" onClick={() => this.handleLogin()}>登录</Button> {' '}\n                </Col>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n        </Modal>\n      </Container>\n    )\n  }\n}\n\nexport default PageNav\n","import React from 'react'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Table from 'react-bootstrap/Table'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Modal from 'react-bootstrap/Modal'\n\nimport url from '../configs/url'\n\nconst showList = contents => {\n  return (<div>\n    {\n      contents.map((c, index) => {\n        return <Row key={index}>\n          <Col className=\"d-none d-sm-block\" sm={3} style={{ textAlign: 'right' }}>{c[0]} {' : '}</Col>\n          <Col className=\"d-none d-sm-block\" sm={9}>{c[1]}</Col>\n          <Col className=\"d-block d-sm-none\" sm={12}>{c[0]} {' : '}</Col>\n          <Col className=\"d-block d-sm-none\" sm={12} style={{ textAlign: 'right' }}>{c[1]}</Col>\n        </Row>\n      })\n    }\n  </div>)\n}\n\nconst repliesTable = replies => {\n  return (\n    <Table striped bordered hover style={{ marginTop: '15px' }}>\n      <thead>\n        <tr>\n          <th>处理人</th>\n          <th>处理时间</th>\n          <th>处理意见</th>\n        </tr>\n      </thead>\n      <tbody>\n        {replies.map(reply => {\n          if (reply.reply_content_type === 'html') {\n            return (<tr>\n              <td>{reply.reply_user}</td>\n              <td>{(new Date(reply.reply_updated_at)).toLocaleString()}</td>\n              <div dangerouslySetInnerHTML={{ __html: reply.reply_content }} />\n            </tr>)\n          }\n        })}\n      </tbody>\n    </Table>\n  )\n}\n\nclass PageContent extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      ticketModalVisible: false,\n      knowledgeModalVisible: false,\n      tickets: [],\n      currentTicketContent: '',\n      knowledges: [],\n      currentKnowledge: ''\n    }\n  }\n\n  componentDidMount () {\n    if (window.user) {\n      fetch(url.saasApiGetTickets, {\n        method: 'POST',\n        body: JSON.stringify({\n        }),\n        headers: {\n          'content-type': 'application/json'\n        }\n      })\n        .then((res) => {\n          return res.json()\n        })\n        .then((result) => {\n          if (result.status) {\n            alert(result.message)\n          } else {\n            this.setState({\n              tickets: result.contents\n            })\n          }\n        })\n\n      fetch(url.saasApiGetKnowledges, {\n        method: 'POST',\n        body: JSON.stringify({\n        }),\n        headers: {\n          'content-type': 'application/json'\n        }\n      })\n        .then((res) => {\n          return res.json()\n        })\n        .then((result) => {\n          this.setState({ // udesk API, 一代不如一代, v2居然返回code=1000代表成功, 所以不再检查status.\n            knowledges: result.knowledge_questions\n          })\n        })\n    }\n  }\n\n  handleShowTicket (ticket) {\n    const infoList = showList([\n      ['工单id', ticket.id],\n      ['标题', ticket.subject],\n      ['状态', ticket.status],\n      ['创建时间', (new Date(ticket.created_at)).toLocaleString()],\n      ['最后更新', (new Date(ticket.updated_at)).toLocaleString()]\n    ])\n    const content = (<div>\n      {infoList}\n      {repliesTable(ticket.replies)}\n    </div>)\n    this.setState({ ticketModalVisible: true, currentTicketContent: content })\n  }\n\n  handleShowKnowledge (knowledge) {\n    this.setState({ knowledgeModalVisible: true, currentKnowledge: <div dangerouslySetInnerHTML={{ __html: knowledge.content }} /> })\n  }\n\n  render () {\n    return (\n      <Container className=\"PageContent\">\n        <Row style={{\n          textAlign: 'left'\n        }}>\n          <Jumbotron className='jumbotron-cover'>\n            <div className='zoomIn animated'>\n              <h1>欢迎!</h1>\n              <p>\n              随着我国新基建和信息应用技术创新等领域不断发展，\n              天津飞腾信息技术有限公司希望为生态伙伴在新基建进程中，\n              提供更好的咨询服务、技术支持和售后保障，并形成常态化和信息化支撑机制，\n              因此，决定成立飞腾新基建服务保障联盟。\n              </p>\n              <p>\n                成为飞腾新基建服务保障联盟会员，可以使用本平台全部功能，并可优先通过 <span className='important-text'>400-9221-666</span> 获取专家电话支持。\n              </p>\n              <p>\n                <Button variant=\"primary\" className='btn-read-more' onClick={() => window.open('/static/regulation.pdf', '_blank')}>查看联盟章程</Button>\n              </p>\n            </div>\n          </Jumbotron>\n        </Row>\n        <Row className='center-title'>\n          <h4>专家在线咨询(工作日10点-16点)</h4>\n        </Row>\n        <Row className='center-title'>\n          <div className=\"title-line\"></div>\n        </Row>\n        <Row>\n          {\n            [\n              // '方案咨询', '项目合作', '认证适配', '整机问题', '课题申报',\n              // '产品销售', '赋能培训', '投融资相关', 'English Service', '其他问题'\n              '方案咨询', '项目合作', '适配认证', '赋能培训',\n              '联合宣传', '整机板卡问题', '课题申报', '其他问题'\n            ].map((channel, index) => (\n              <Col key={index} lg={3} sm={6} xs={6} style={{ margin: '1em 0' }}>\n                <Button variant=\"light\" className='btn-service'\n                  onClick={() => {\n                    window.user\n                      ? window.open(`https://1396609.s2.udesk.cn/im_client/?web_plugin_id=28724?channel=${channel}${window.user.webim_sign}`, '_blank')\n                      : alert('请先登录')\n                  }}>{channel}</Button>\n              </Col>\n            ))\n          }\n        </Row>\n        <Row className='center-title' style={{ marginTop: '2em' }}>\n          <h4>我的工单</h4>\n        </Row>\n        <Row className='center-title'>\n          <div className=\"title-line\"></div>\n        </Row>\n        <Row>\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>编号</th>\n                <th>标题</th>\n                <th>更新时间</th>\n                <th>当前状态</th>\n              </tr>\n            </thead>\n            <tbody>\n              {window.user\n                ? this.state.tickets.map(ticket => {\n                  return (<tr>\n                    <td>{ticket.id}</td>\n                    <td><a href=\"#\" onClick={() => this.handleShowTicket(ticket)}>{ticket.subject}</a></td>\n                    <td>{(new Date(ticket.updated_at)).toLocaleDateString()}</td>\n                    <td>{\n                      ticket.status === 'open'\n                        ? <Button variant=\"outline-danger\" size='sm'\n                          onClick={() => this.handleShowTicket(ticket)}>正在处理</Button>\n                        : <Button variant=\"outline-dark\" size='sm'\n                          onClick={() => this.handleShowTicket(ticket)}>已完成</Button>\n                    }</td>\n                  </tr>)\n                })\n                : <tr>\n                  <td colSpan=\"4\">请登录后查看工单</td>\n                </tr>\n              }\n            </tbody>\n          </Table>\n        </Row>\n        <Row className='center-title' style={{ marginTop: '2em' }}>\n          <h4>知识库</h4>\n        </Row>\n        <Row className='center-title'>\n          <div className=\"title-line\"></div>\n        </Row>\n        <Row>\n          <ListGroup style={{\n            width: '100%',\n            textAlign: 'left'\n          }}>\n            {window.user\n              ? this.state.knowledges.map(knowledge => {\n                return (<ListGroup.Item action onClick={() => this.handleShowKnowledge(knowledge)} className='item-highlight' >\n                  {knowledge.title}\n                </ListGroup.Item>)\n              })\n              : <ListGroup.Item action className='item-highlight'>\n                请登录后查看知识库\n              </ListGroup.Item>\n            }\n          </ListGroup>\n        </Row>\n\n        <Modal show={this.state.ticketModalVisible} size='lg'\n          onHide={() => this.setState({ ticketModalVisible: false, currentTicketContent: '' })}>\n          <Modal.Header closeButton>\n            <Modal.Title>工单详情</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{this.state.currentTicketContent}</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\"\n              onClick={() => this.setState({ ticketModalVisible: false, currentTicketContent: '' })}>\n              关闭\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal show={this.state.knowledgeModalVisible} size='lg'\n          onHide={() => this.setState({ knowledgeModalVisible: false, currentKnowledge: '' })}>\n          <Modal.Header closeButton>\n            <Modal.Title>知识库详情</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{this.state.currentKnowledge}</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => this.setState({ knowledgeModalVisible: false, currentKnowledge: '' })}>\n              关闭\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </Container>\n    )\n  }\n}\n\nexport default PageContent\n","import React from 'react'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nconst PageFooter = () => {\n  return (\n    <Row style={{ width: '100%', margin: '4em auto 2em auto' }}>\n      <Col>\n        <a href='#' className='info-text' >津ICP备16004869号-1</a>\n          &nbsp;&nbsp;&nbsp;&nbsp;\n        <span className='info-text' >\n          我们正在骄傲的使用飞腾CPU支撑本系统\n        </span>\n      </Col>\n    </Row>\n  )\n}\n\nexport default PageFooter\n","import React from 'react'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport './App.scss'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport PageNav from './parts/pageNav'\nimport PageContent from './parts/pageContent'\nimport PageFooter from './parts/pageFooter'\n\nfunction App () {\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row>\n          <PageNav/>\n          <PageContent></PageContent>\n          <PageFooter/>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import 'react-app-polyfill/ie11'\n// import 'react-app-polyfill/stable';\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './custom.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}